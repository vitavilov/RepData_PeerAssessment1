xlab = "UTM East, m", ylab = "UTM North, m",
main = "Cross-transect points",
sub = paste("Radius=", radius_m,
"m, step=",grid_step_m,
"m, created: ", format(Sys.time(), "%d %b %Y"),
sep="")
)
#add a central point
points(CP_UTM_East, CP_UTM_North, col="red", pch=10, cex=2, lwd=2)
#draw grid
abline(h = seq(CP_UTM_North-radius_m,CP_UTM_North+radius_m, by = grid_step_m),
lty="dotted", col="grey"
)
abline(v = seq(CP_UTM_East-radius_m,CP_UTM_East+radius_m, by = grid_step_m),
lty="dotted", col="grey"
)
#draw a circle around a center plot
require(plotrix)
draw.circle(x = CP_UTM_East, y = CP_UTM_North, radius = radius_m, lty="dotted")
dev.copy2pdf(file=paste(filename,".pdf"))
radius_m = 350
grid_step_m = 35
CP_UTM_East =761979
CP_UTM_North = 1265898
CP_UTM_LongZone = 48
CP_UTM_LATZone = "P"
Point_descrip = "Cross-transect"
Point_style = 101
# calc all points ----------------------------------------------
radius_mod <- radius_m - (radius_m %% grid_step_m)
beam_n_points <- radius_m %/% grid_step_m
N <- data.frame(East = rep(0,beam_n_points)
,North = seq(radius_mod, 0 + grid_step_m, length.out = beam_n_points)
,Name =  paste(rep("N",beam_n_points), beam_n_points:1,sep="_")
)
S <- data.frame(East = rep(0,beam_n_points)
,North = seq(-radius_mod, 0 - grid_step_m, length.out = beam_n_points)
,Name =  paste(rep("S",beam_n_points), beam_n_points:1,sep="_")
)
W <- data.frame(East =  seq(-radius_mod, 0 - grid_step_m, length.out = beam_n_points)
,North = rep(0,beam_n_points)
,Name =  paste(rep("W",beam_n_points), beam_n_points:1,sep="_")
)
E <- data.frame(East =  seq(radius_mod, 0 + grid_step_m, length.out = beam_n_points)
,North = rep(0,beam_n_points)
,Name =  paste(rep("E",beam_n_points), beam_n_points:1,sep="_")
)
cross_trsct <- rbind(N,S,W,E)
# compose points description
Point_descrip <- paste(Point_descrip
, "range:", radius_m
, "grid step:", grid_step_m
, "n:", smple_n
, "seed",seed
, date()
, sep=" ")
#add additional columns
cross_trsct <- cbind(cross_trsct[,3],
cross_trsct[,1:2],
rep(CP_UTM_LongZone, nrow(cross_trsct)),
rep(CP_UTM_LATZone , nrow(cross_trsct)),
rep(Point_descrip  , nrow(cross_trsct)),
rep(Point_style    , nrow(cross_trsct))
)
colnames(cross_trsct) <- c("name_tmp",
"East",
"North",
"LongZone",
"LatZone",
"Description",
"Style"
)
#introduce absolute coordinates
cross_trsct$East <- cross_trsct$East + CP_UTM_East
cross_trsct$North <- cross_trsct$North + CP_UTM_North
#FILE Write to a .csv file, ready to import to http://www.apps.ingeapps.com/gtools/en/kml-creator.php
filename <- paste("cross_transect_r", radius_m,
"_gs",grid_step_m,
sep = "")
file_prefix <- "Utm,,,,,,"
write.table(file_prefix, paste(filename,".csv", sep=""), sep=",",
row.names = FALSE, col.names = FALSE, quote = FALSE)
suppressWarnings(
write.table(cross_trsct, paste(filename,".csv", sep=""), sep=",",
append = TRUE, row.names = FALSE, col.names = TRUE, quote = FALSE)
)
#PLOT   the resulted sample set:
windows()
plot(cross_trsct$North~cross_trsct$East,
type = "p", pch=1, asp=1,
ylim=c(CP_UTM_North-radius_m,CP_UTM_North+radius_m),
xlim=c(CP_UTM_East -radius_m,CP_UTM_East +radius_m),
xlab = "UTM East, m", ylab = "UTM North, m",
main = "Cross-transect points",
sub = paste("Radius=", radius_m,
"m, step=",grid_step_m,
"m, created: ", format(Sys.time(), "%d %b %Y"),
sep="")
)
#add a central point
points(CP_UTM_East, CP_UTM_North, col="red", pch=10, cex=2, lwd=2)
#draw grid
abline(h = seq(CP_UTM_North-radius_m,CP_UTM_North+radius_m, by = grid_step_m),
lty="dotted", col="grey"
)
abline(v = seq(CP_UTM_East-radius_m,CP_UTM_East+radius_m, by = grid_step_m),
lty="dotted", col="grey"
)
#draw a circle around a center plot
require(plotrix)
draw.circle(x = CP_UTM_East, y = CP_UTM_North, radius = radius_m, lty="dotted")
dev.copy2pdf(file=paste(filename,".pdf"))
radius_m = 350
grid_step_m = 35
CP_UTM_East =761979
CP_UTM_North = 1265898
CP_UTM_LongZone = 48
CP_UTM_LATZone = "P"
Point_descrip = "Cross-transect"
Point_style = 101
# calc all points ----------------------------------------------
radius_mod <- radius_m - (radius_m %% grid_step_m)
beam_n_points <- radius_m %/% grid_step_m
N <- data.frame(East = rep(0,beam_n_points)
,North = seq(radius_mod, 0 + grid_step_m, length.out = beam_n_points)
,Name =  paste(rep("N",beam_n_points), beam_n_points:1,sep="_")
)
S <- data.frame(East = rep(0,beam_n_points)
,North = seq(-radius_mod, 0 - grid_step_m, length.out = beam_n_points)
,Name =  paste(rep("S",beam_n_points), beam_n_points:1,sep="_")
)
W <- data.frame(East =  seq(-radius_mod, 0 - grid_step_m, length.out = beam_n_points)
,North = rep(0,beam_n_points)
,Name =  paste(rep("W",beam_n_points), beam_n_points:1,sep="_")
)
E <- data.frame(East =  seq(radius_mod, 0 + grid_step_m, length.out = beam_n_points)
,North = rep(0,beam_n_points)
,Name =  paste(rep("E",beam_n_points), beam_n_points:1,sep="_")
)
cross_trsct <- rbind(N,S,W,E)
# compose points description
Point_descrip <- paste(Point_descrip
, "range:", radius_m
, "grid step:", grid_step_m
, "n:", smple_n
, "seed",seed
, date()
, sep=" ")
#add additional columns
cross_trsct <- cbind(cross_trsct[,3],
cross_trsct[,1:2],
rep(CP_UTM_LongZone, nrow(cross_trsct)),
rep(CP_UTM_LATZone , nrow(cross_trsct)),
rep(Point_descrip  , nrow(cross_trsct)),
rep(Point_style    , nrow(cross_trsct))
)
colnames(cross_trsct) <- c("Name",
"East",
"North",
"LongZone",
"LatZone",
"Description",
"Style"
)
#introduce absolute coordinates
cross_trsct$East <- cross_trsct$East + CP_UTM_East
cross_trsct$North <- cross_trsct$North + CP_UTM_North
#FILE Write to a .csv file, ready to import to http://www.apps.ingeapps.com/gtools/en/kml-creator.php
filename <- paste("cross_transect_r", radius_m,
"_gs",grid_step_m,
sep = "")
file_prefix <- "Utm,,,,,,"
write.table(file_prefix, paste(filename,".csv", sep=""), sep=",",
row.names = FALSE, col.names = FALSE, quote = FALSE)
suppressWarnings(
write.table(cross_trsct, paste(filename,".csv", sep=""), sep=",",
append = TRUE, row.names = FALSE, col.names = TRUE, quote = FALSE)
)
#PLOT   the resulted sample set:
windows()
plot(cross_trsct$North~cross_trsct$East,
type = "p", pch=1, asp=1,
ylim=c(CP_UTM_North-radius_m,CP_UTM_North+radius_m),
xlim=c(CP_UTM_East -radius_m,CP_UTM_East +radius_m),
xlab = "UTM East, m", ylab = "UTM North, m",
main = "Cross-transect points",
sub = paste("Radius=", radius_m,
"m, step=",grid_step_m,
"m, created: ", format(Sys.time(), "%d %b %Y"),
sep="")
)
#add a central point
points(CP_UTM_East, CP_UTM_North, col="red", pch=10, cex=2, lwd=2)
#draw grid
abline(h = seq(CP_UTM_North-radius_m,CP_UTM_North+radius_m, by = grid_step_m),
lty="dotted", col="grey"
)
abline(v = seq(CP_UTM_East-radius_m,CP_UTM_East+radius_m, by = grid_step_m),
lty="dotted", col="grey"
)
#draw a circle around a center plot
require(plotrix)
draw.circle(x = CP_UTM_East, y = CP_UTM_North, radius = radius_m, lty="dotted")
dev.copy2pdf(file=paste(filename,".pdf"))
radius_m = 350
grid_step_m = 35
CP_UTM_East =761979
CP_UTM_North = 1265898
CP_UTM_LongZone = 48
CP_UTM_LATZone = "P"
Point_descrip = "Cross-transect"
Point_style = 101
# calc all points ----------------------------------------------
radius_mod <- radius_m - (radius_m %% grid_step_m)
beam_n_points <- radius_m %/% grid_step_m
N <- data.frame(East = rep(0,beam_n_points)
,North = seq(radius_mod, 0 + grid_step_m, length.out = beam_n_points)
,Name =  paste(rep("N",beam_n_points), beam_n_points:1,sep="_")
)
S <- data.frame(East = rep(0,beam_n_points)
,North = seq(-radius_mod, 0 - grid_step_m, length.out = beam_n_points)
,Name =  paste(rep("S",beam_n_points), beam_n_points:1,sep="_")
)
W <- data.frame(East =  seq(-radius_mod, 0 - grid_step_m, length.out = beam_n_points)
,North = rep(0,beam_n_points)
,Name =  paste(rep("W",beam_n_points), beam_n_points:1,sep="_")
)
E <- data.frame(East =  seq(radius_mod, 0 + grid_step_m, length.out = beam_n_points)
,North = rep(0,beam_n_points)
,Name =  paste(rep("E",beam_n_points), beam_n_points:1,sep="_")
)
cross_trsct <- rbind(N,S,W,E)
# compose points description
Point_descrip <- paste(Point_descrip
, "range:", radius_m
, "grid step:", grid_step_m
, "n:", smple_n
, "seed",seed
, date()
, sep=" ")
#add additional columns
cross_trsct <- cbind(cross_trsct[,3],
cross_trsct[,1:2],
rep(CP_UTM_LongZone, nrow(cross_trsct)),
rep(CP_UTM_LATZone , nrow(cross_trsct)),
rep(Point_descrip  , nrow(cross_trsct)),
rep(Point_style    , nrow(cross_trsct))
)
colnames(cross_trsct) <- c("Name",
"East",
"North",
"LongZone",
"LatZone",
"Description",
"Style"
)
#introduce absolute coordinates
cross_trsct$East <- cross_trsct$East + CP_UTM_East
cross_trsct$North <- cross_trsct$North + CP_UTM_North
#FILE Write to a .csv file, ready to import to http://www.apps.ingeapps.com/gtools/en/kml-creator.php
filename <- paste("cross_transect_r", radius_m,
"_gs",grid_step_m,
sep = "")
file_prefix <- "Utm,,,,,,"
#         write.table(file_prefix, paste(filename,".csv", sep=""), sep=",",
#                     row.names = FALSE, col.names = FALSE, quote = FALSE)
suppressWarnings(
write.table(cross_trsct, paste(filename,".csv", sep=""), sep=",",
append = TRUE, row.names = FALSE, col.names = TRUE, quote = FALSE)
)
#PLOT   the resulted sample set:
windows()
plot(cross_trsct$North~cross_trsct$East,
type = "p", pch=1, asp=1,
ylim=c(CP_UTM_North-radius_m,CP_UTM_North+radius_m),
xlim=c(CP_UTM_East -radius_m,CP_UTM_East +radius_m),
xlab = "UTM East, m", ylab = "UTM North, m",
main = "Cross-transect points",
sub = paste("Radius=", radius_m,
"m, step=",grid_step_m,
"m, created: ", format(Sys.time(), "%d %b %Y"),
sep="")
)
#add a central point
points(CP_UTM_East, CP_UTM_North, col="red", pch=10, cex=2, lwd=2)
#draw grid
abline(h = seq(CP_UTM_North-radius_m,CP_UTM_North+radius_m, by = grid_step_m),
lty="dotted", col="grey"
)
abline(v = seq(CP_UTM_East-radius_m,CP_UTM_East+radius_m, by = grid_step_m),
lty="dotted", col="grey"
)
#draw a circle around a center plot
require(plotrix)
draw.circle(x = CP_UTM_East, y = CP_UTM_North, radius = radius_m, lty="dotted")
dev.copy2pdf(file=paste(filename,".pdf"))
radius_m = 350
grid_step_m = 35
CP_UTM_East =761979
CP_UTM_North = 1265898
CP_UTM_LongZone = 48
CP_UTM_LATZone = "P"
Point_descrip = "Cross-transect"
Point_style = 101
# calc all points ----------------------------------------------
radius_mod <- radius_m - (radius_m %% grid_step_m)
beam_n_points <- radius_m %/% grid_step_m
N <- data.frame(East = rep(0,beam_n_points)
,North = seq(radius_mod, 0 + grid_step_m, length.out = beam_n_points)
,Name =  paste(rep("N",beam_n_points), beam_n_points:1,sep="_")
)
S <- data.frame(East = rep(0,beam_n_points)
,North = seq(-radius_mod, 0 - grid_step_m, length.out = beam_n_points)
,Name =  paste(rep("S",beam_n_points), beam_n_points:1,sep="_")
)
W <- data.frame(East =  seq(-radius_mod, 0 - grid_step_m, length.out = beam_n_points)
,North = rep(0,beam_n_points)
,Name =  paste(rep("W",beam_n_points), beam_n_points:1,sep="_")
)
E <- data.frame(East =  seq(radius_mod, 0 + grid_step_m, length.out = beam_n_points)
,North = rep(0,beam_n_points)
,Name =  paste(rep("E",beam_n_points), beam_n_points:1,sep="_")
)
cross_trsct <- rbind(N,S,W,E)
# compose points description
Point_descrip <- paste(Point_descrip
, "range:", radius_m
, "grid step:", grid_step_m
, "n:", smple_n
, "seed",seed
, date()
, sep=" ")
#add additional columns
cross_trsct <- cbind(cross_trsct[,3],
cross_trsct[,1:2],
rep(CP_UTM_LongZone, nrow(cross_trsct)),
rep(CP_UTM_LATZone , nrow(cross_trsct)),
rep(Point_descrip  , nrow(cross_trsct)),
rep(Point_style    , nrow(cross_trsct))
)
colnames(cross_trsct) <- c("Name",
"East",
"North",
"LongZone",
"LatZone",
"Description",
"Style"
)
#introduce absolute coordinates
cross_trsct$East <- cross_trsct$East + CP_UTM_East
cross_trsct$North <- cross_trsct$North + CP_UTM_North
#FILE Write to a .csv file, ready to import to http://www.apps.ingeapps.com/gtools/en/kml-creator.php
filename <- paste("cross_transect_r", radius_m,
"_gs",grid_step_m,
sep = "")
file_prefix <- "Utm,,,,,,"
#         write.table(file_prefix, paste(filename,".csv", sep=""), sep=",",
#                     row.names = FALSE, col.names = FALSE, quote = FALSE)
#
#         suppressWarnings(
#                 write.table(cross_trsct, paste(filename,".csv", sep=""), sep=",",
#                             append = TRUE, row.names = FALSE, col.names = TRUE, quote = FALSE)
#         )
write.table(cross_trsct, paste(filename,".csv", sep=""), sep=",",
row.names = FALSE, col.names = TRUE, quote = FALSE)
#PLOT   the resulted sample set:
windows()
plot(cross_trsct$North~cross_trsct$East,
type = "p", pch=1, asp=1,
ylim=c(CP_UTM_North-radius_m,CP_UTM_North+radius_m),
xlim=c(CP_UTM_East -radius_m,CP_UTM_East +radius_m),
xlab = "UTM East, m", ylab = "UTM North, m",
main = "Cross-transect points",
sub = paste("Radius=", radius_m,
"m, step=",grid_step_m,
"m, created: ", format(Sys.time(), "%d %b %Y"),
sep="")
)
#add a central point
points(CP_UTM_East, CP_UTM_North, col="red", pch=10, cex=2, lwd=2)
#draw grid
abline(h = seq(CP_UTM_North-radius_m,CP_UTM_North+radius_m, by = grid_step_m),
lty="dotted", col="grey"
)
abline(v = seq(CP_UTM_East-radius_m,CP_UTM_East+radius_m, by = grid_step_m),
lty="dotted", col="grey"
)
#draw a circle around a center plot
require(plotrix)
draw.circle(x = CP_UTM_East, y = CP_UTM_North, radius = radius_m, lty="dotted")
dev.copy2pdf(file=paste(filename,".pdf"))
radius_m = 300
grid_step_m = 35
CP_UTM_East =761979
CP_UTM_North = 1265898
CP_UTM_LongZone = 48
CP_UTM_LATZone = "P"
Point_descrip = "Cross-transect"
Point_style = 101
# calc all points ----------------------------------------------
radius_mod <- radius_m - (radius_m %% grid_step_m)
beam_n_points <- radius_m %/% grid_step_m
N <- data.frame(East = rep(0,beam_n_points)
,North = seq(radius_mod, 0 + grid_step_m, length.out = beam_n_points)
,Name =  paste(rep("N",beam_n_points), beam_n_points:1,sep="_")
)
S <- data.frame(East = rep(0,beam_n_points)
,North = seq(-radius_mod, 0 - grid_step_m, length.out = beam_n_points)
,Name =  paste(rep("S",beam_n_points), beam_n_points:1,sep="_")
)
W <- data.frame(East =  seq(-radius_mod, 0 - grid_step_m, length.out = beam_n_points)
,North = rep(0,beam_n_points)
,Name =  paste(rep("W",beam_n_points), beam_n_points:1,sep="_")
)
E <- data.frame(East =  seq(radius_mod, 0 + grid_step_m, length.out = beam_n_points)
,North = rep(0,beam_n_points)
,Name =  paste(rep("E",beam_n_points), beam_n_points:1,sep="_")
)
cross_trsct <- rbind(N,S,W,E)
# compose points description
Point_descrip <- paste(Point_descrip
, "range:", radius_m
, "grid step:", grid_step_m
, "n:", smple_n
, "seed",seed
, date()
, sep=" ")
#add additional columns
cross_trsct <- cbind(cross_trsct[,3],
cross_trsct[,1:2],
rep(CP_UTM_LongZone, nrow(cross_trsct)),
rep(CP_UTM_LATZone , nrow(cross_trsct)),
rep(Point_descrip  , nrow(cross_trsct)),
rep(Point_style    , nrow(cross_trsct))
)
colnames(cross_trsct) <- c("Name",
"East",
"North",
"LongZone",
"LatZone",
"Description",
"Style"
)
#introduce absolute coordinates
cross_trsct$East <- cross_trsct$East + CP_UTM_East
cross_trsct$North <- cross_trsct$North + CP_UTM_North
#FILE Write to a .csv file, ready to import to http://www.apps.ingeapps.com/gtools/en/kml-creator.php
filename <- paste("cross_transect_r", radius_m,
"_gs",grid_step_m,
sep = "")
file_prefix <- "Utm,,,,,,"
#         write.table(file_prefix, paste(filename,".csv", sep=""), sep=",",
#                     row.names = FALSE, col.names = FALSE, quote = FALSE)
#
#         suppressWarnings(
#                 write.table(cross_trsct, paste(filename,".csv", sep=""), sep=",",
#                             append = TRUE, row.names = FALSE, col.names = TRUE, quote = FALSE)
#         )
write.table(cross_trsct, paste(filename,".csv", sep=""), sep=",",
row.names = FALSE, col.names = TRUE, quote = FALSE)
#PLOT   the resulted sample set:
windows()
plot(cross_trsct$North~cross_trsct$East,
type = "p", pch=1, asp=1,
ylim=c(CP_UTM_North-radius_m,CP_UTM_North+radius_m),
xlim=c(CP_UTM_East -radius_m,CP_UTM_East +radius_m),
xlab = "UTM East, m", ylab = "UTM North, m",
main = "Cross-transect points",
sub = paste("Radius=", radius_m,
"m, step=",grid_step_m,
"m, created: ", format(Sys.time(), "%d %b %Y"),
sep="")
)
#add a central point
points(CP_UTM_East, CP_UTM_North, col="red", pch=10, cex=2, lwd=2)
#draw grid
abline(h = seq(CP_UTM_North-radius_m,CP_UTM_North+radius_m, by = grid_step_m),
lty="dotted", col="grey"
)
abline(v = seq(CP_UTM_East-radius_m,CP_UTM_East+radius_m, by = grid_step_m),
lty="dotted", col="grey"
)
#draw a circle around a center plot
require(plotrix)
draw.circle(x = CP_UTM_East, y = CP_UTM_North, radius = radius_m, lty="dotted")
dev.copy2pdf(file=paste(filename,".pdf"))
sample(cross_trsct,10)
with(cross_trsct, sample(nrow(),10))
cross_trsct[sample(nrow(cross_trsct),10),]
source('C:/Users/Vitaly Avilov/Google Drive/1 Research stations/Vietnam/GPS_points/Sapling_points_plan/random_sample_points_around.R')
sample_points_around(radius_m = 300, grid_step_m=35, smple_n = 10, seed=2548, Point_descrip = NCT_SOM)
sample_points_around(radius_m = 300, grid_step_m=35, smple_n = 10, seed=2548, Point_descrip = "NCT_SOM")
sample_points_around(radius_m = 300, grid_step_m=1, smple_n = 10, seed=2548, Point_descrip = "NCT_SOM")
sample_points_around(radius_m = 300, grid_step_m=2, smple_n = 10, seed=324185, Point_descrip = "NCT_SOM")
sample_points_around(radius_m = 300, grid_step_m=2, smple_n = 10, Point_descrip = "NCT_SOM")
sample_points_around(radius_m = 300, grid_step_m=2, smple_n = 10, seed=5, Point_descrip = "NCT_SOM")
sample_points_around(radius_m = 300, grid_step_m=2, smple_n = 11, seed=5, Point_descrip = "NCT_SOM")
install.packages("maptools")
library("maptools", lib.loc="~/R/win-library/3.1")
library("rgdal", lib.loc="~/R/win-library/3.1")
SOM<-cross_trsct[sample(nrow(cross_trsct),10),]
OSM
SOM
SOM[order(Name),]
SOM[order(Name),]
SOM[order(SOM$Name),]
data(trees)
summary(trre)
summary(trees)
plot(trees)
pairs(trees)
setwd("C:/Users/Vitaly Avilov/Coursera/C5_reproducible_research/RepData_PeerAssessment1")
